@using RGC_Service.Models.RGC_Service_Project_Model;
@model ProductServiceViewModel

@{
    ViewBag.Title = "Product Repair";
}



<style>
    #alertMessage {
        height: 25px;
        padding: 0px;
    }

    .diplaynone {
        display: none
    }
</style>

<script lang="ja" type="text/javascript">

	$(document).ready(function () {


		AddRow(5);



		//Start Qty Field Event
		$('tbody').on('change', "tr td input[name='Qty']", function () { 
		

			var ttlAmount = $(this).closest('tr').find('td').find('input[name="TotalAmount"]')
			var amount = $(this).closest('tr').find('td').find('input[name="Price"]').val()
			var qty = 0
			var checkNumber = IsNumeric($(this).val());

			if (isNaN(checkNumber)) {
				alert('Check Qty And Price Is Numeric Disgit')
				return;
			}
			qty = $(this).val();
			var sumamount = qty * amount;
			$(ttlAmount).val(sumamount);

		})

		// end Qty Field Event
		

		//'input:text[name="PartNo"]'
		$('tbody').on('focus', 'tr td input[name="PartNo"]', function () { 
		$(this).autocomplete({
			minLength:3,
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("SearchProduct", "Others")',
                    contentType: "Application/Json;charset=utf-8",
                    dataType:"JSON",
                    type: "POST",
                    data: JSON.stringify({
                        term: request.term
						
                    }),
                    success: function (data) {

						response(data)
                    }, error: function (err) {
                        alert(err);
                    }

                })
				//End ajax function
			},
			select: function (event, ui)
			{
				var ProdName = $(this).closest('tr').find('td').find('input[name="Description"]')
				var unitPrice = $(this).closest('tr').find('td').find('input[name="Price"]')
				var QtyField = $(this).closest('tr').find('td').find('input[name="Qty"]')
				 $.ajax({
                    url: '@Url.Action("GetProduct", "Others")',
                    contentType: "Application/Json;charset=utf-8",
                    dataType:"JSON",
                    type: "POST",
					 data: JSON.stringify({
						 term: ui.item.value
						
                    }),
                    success: function (data) {

						//alert(ui.item.value);
						var output = JSON.stringify(data);
						
						$.each(data, function (i, u) {
							$(ProdName).val(u.ProdName);
							$(unitPrice).val(u.UnitPrice);
							$(QtyField).focus();
						})
						
                    }, error: function (err) {
                        alert(err);
                    }

                })
				//End ajax function
			
			}   
	
        })
		//End autocomplete function
		})
		//End Focus Event

        ////Data Picker
        //$('.datepicker').datepicker({
        //    dateFormat: "dd-mm-yy",
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "1980:+10"//,
        //    //showOn:"both",
        //    //buttonText: "<i class='fa fa-clock'></i>"


        //});

        //Refuse Checkbox Event
        $("#chkRefuse").click(function () {
            if ($(this).prop("checked") == true) {
                $("#divRefuse").removeClass('diplaynone')
            }
            else {
                $("#divRefuse").addClass('diplaynone')
            }


        })






        //Qty Field Change Event

        $('#txtQty').keyup(function () {



            if ($(this).val() != '') {
                var blnFlag = CheckValidation();
            if (blnFlag == false) {
                return;
            }

            }
            //Call function of Total Amount
            //Calculattion of Total Amount in function
            TotalAmount();

        })

        //End of Qty Field Change Event


         //Start check validation (Qty, Price)

        function CheckValidation() {
            var _partno = $('#txtPartNo').val();
            var _Qty = $('#txtQty').val();
            var _Price = $('#txtUnitPrice').val();

            var _QtyFlag = CheckNumeric(_Qty);
            var _QtyPrice = CheckNumeric(_Price);
            var blnFlag = true;


            if (_partno.length == 0) {
                $(alertMessage).html("<a class='close' href='#' id='linkalert'>&times;</a> <strong> Error: </strong> Partno is not found")

                $('#txtSearchPartNo').focus();
                blnFlag = false;
                return blnFlag
            }

            if (_QtyFlag == false) {
                $(alertMessage).html("<a class='close' href='#' id='linkalert'>&times;</a> <strong> Error: </strong> Qty Is invalid format")
                  $('#txtQty').focus();

                blnFlag = false;
                return blnFlag
            }


            if (_QtyPrice == false) {
                $(alertMessage).html("<a class='close' href='#' id='linkalert'>&times;</a>  <strong>Error: </strong> Price Is invalid format")

                $('#txtUnitPrice').focus();

                blnFlag = false;
                return blnFlag
            }

            return blnFlag;

        }

        //end   check validation (Qty, Price)








        //Start Function Total Amount
        //Sum Total AMount of Qty and Price
        function TotalAmount() {

            var _Qty = $('#txtQty').val();
            var _Price = $('#txtUnitPrice').val();
            var TotalPrice = _Qty * _Price

            $('#txtTotalAmount').val(TotalPrice);
        }

        //End Function Total Amount


        //Check Numeric Validation
        function CheckNumeric(value) {
            var flag = $.isNumeric(value);

            return flag;
        }
        //End  Numeric Validation


        //--------- Add Button Function ----------------
        $("#btnAddProduct").click(function () {

            var ProductTable = $('#pTable tbody');
            var _partno = $('#txtPartNo').val();
            var _Description = $('#txtDescription').val();
            var _Mesurement = $('#txtMeasurement').val();
            var _Qty = $('#txtQty').val();
            var _Price = $('#txtUnitPrice').val();

            var _TotalAmount = 0;
            var _CheckValidation = CheckValidation();



            //chekc qty and price and partno validation
            if (_CheckValidation == false) {
                $("#alertMessage").show('fade')
                setTimeout(function () {
                    $("#alertMessage").hide('fade')
                }, 3000)
                alert("'" + _partno + "' Is Duplicate in the List")
                return;
            }

            //Check Duplicate Row
            var Rows = $('#pTable tbody tr')
            var IsDuplicate = false;
            $(Rows).each(function ()
            {
                if (_partno.toLowerCase() == $(this).find("td:eq(1)").text().toLowerCase()) {
                    IsDuplicate = true
                    return
                }

            })

            if (IsDuplicate == true) {

                $('#alertMessage').html("Error :  <strong> (" + _partno + ")</strong> Is Duplicate in the List")

                $("#alertMessage").show('fade')


                setTimeout(function () {
                    $("#alertMessage").hide('fade')
                }, 3000)
                //alert("'" + _partno + "' Is Duplicate in the List")
                return
            }




            _TotalAmount = $('#txtTotalAmount').val();
            var row = '<tr>'
            row += "<td hidden> <input type='hidden'  name='PartNo' value='" + _partno + "' /> </td>"
            row += "<td>" + _partno + "</td>"
            row += "<td hidden> <input type='hidden'  name='Description' value='" + _Description + "' /> </td>"
            row += "<td >" + _Description + "</td>"
            row += "<td hidden> <input type='hidden'  name='Qty' value='" + _Qty + "' /> </td>"
            row += "<td>" + _Qty + "</td>"
            row += "<td hidden> <input type='hidden'  name='Price' value='" + _Price + "' /> </td>"
            row += "<td>" + _Price + "</td>"
            row += "<td>" + _TotalAmount + "</td>"


            row += "<td><button type='button' class='btn btn-danger btn-sm' onclick='RemoveRow(this)'>Delete</button></td>"
            row += '</tr>'

            $(ProductTable).append(row);

        })


   //--------- End Add Button Function ----------------


		// ----------------- Start btnrowCreate 

		$("#btnrowCreate").click(function () {

			var bln = IsNumeric($('#txtRowQty').val());

			if (bln == false) {
				alert('Type Numeric Digit and Greater Than 0')
				
				$('#txtRowQty').focus();
				$('#txtRowQty').val('0')
				return;
			}

			AddRow($('#txtRowQty').val());




		})
			// ------------------ End btnrowCreate

		function AddRow(value)
		{
			var intval = value;
			var ProductTable = $('#pTable tbody');
			var sl = 0
		
			for (var i=0; i < intval; i++)
			{

				sl = $('#pTable tbody tr').length;;
				if (sl == 0) {
					sl = 1
				}
				else {
					sl += 1
				}


				var row = '<tr>'
				row += "<td>"+ sl +"</td>"

				row += "<td> <input type='text' class='form-control form-control-sm'  name='PartNo' /> </td>"
		
				row += "<td> <input type='text' class='form-control form-control-sm' name='Description'  /> </td>"
			
				row += "<td> <input type='text' class='form-control form-control-sm'  name='Qty'  /> </td>"
	
				row += "<td> <input type='text' class='form-control form-control-sm' name='Price' /> </td>"
				//row += "<td>" + _Price + "</td>"
				//row += "<td>" + 0 + "</td>"
				row += "<td> <input type='text' readonly='readonly' class='form-control form-control-sm'  name='TotalAmount' value=0 /> </td>"


				row += "<td><button type='button' class='btn btn-danger btn-sm' onclick='RemoveRow(this)'>Delete</button></td>"
				row += '</tr>'
				$(ProductTable).append(row);
			}
		}




		// Check Value is Numeric
		function IsNumeric(value)
		{
			var bln = true;
			
				var val = parseInt(value)


			if (isNaN(val)) {
				bln = false;
			}
			else if (val == '0') {
				bln = false;
			}
		
			
		

			return bln;
			}


	



        $("#txtPartNo").focusout(function () {
            var _code = $("#txtPartNo").val();


            $.ajax({
                url: '@Url.Action("ProductSearch", "ProductService")',
                dataType: 'JSON',
                data: {
                    term: _code
                },
                contentType: 'Application/Json;Charset=Utf-8',
                success: function (data) {

                    //data = JSON.stringify(data);
                    if (data.isSuccess == true) {



                        $("#txtPartNo").val(data._Product.Code);
                        $("#txtDescription").val(data._Product.ProdName);
                        $("#txtUnitPrice").val(data._Product.UnitPrice);

                        $("#txtMeasurement").val(data._Product.Measure);


                    }

                },
                error: function () {
                    alert("Found Porblem in Search Process")
                }
            })



        })
                //--------- End Search Text Box Part No ----------------

        function SearchProduct(value) {

            var val = true;


            return val;
        }

                //--------- End Ajax Function----------------



    })

    //end Jquery Section






    //Start of JavaScript Section

    function RemoveRow(value) {
        $(value).closest('tr').remove();

    }

</script>




<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Save", "ProductService", FormMethod.Post))
        {
            @Html.AntiForgeryToken();

            <div class="card">
                <div class="card-header bg-primary">
                    <h2 class="card-title">Product Repair</h2>
                    @Html.HiddenFor(m => m.JobCode)
                </div>

                <!--End of Card Header-->

                <div class="card-body">



                    <div class="row col-md-12 bg-gray-light">

                        <h4 class="pl-4 text-gray"><u>Add Product</u></h4>
                    </div>

                    <!--End of Row Header Title -->
                    @*<div class="row py-2">

                        <label for="txtParno" class="control-label col-md-1">Part no:</label>
                        <input type="text" class="form-control col-md-3" placeholder="Enter Product Code" id="txtPartNo" />


                        <label for="txtDescription" class="control-label  col-md-2">Description</label>
                        <input type="text" class="form-control  col-md-3" placeholder="Enter Product Name" id="txtDescription" />

                        <label for="txtQty" class="control-label  col-md-1">Qty</label>
                        <input type="text" class="form-control col-md-2" placeholder="Type Qty" id="txtQty" />
                    </div>*@

                    <!--End of Row Product Details -->
                    @*<div class="row mt-3">




                        <label for="txtUnitPrice" class="control-label   col-md-1">Unit Price</label>
                        <input type="text" class="form-control   col-md-3" placeholder="Enter Unit Price" id="txtUnitPrice" />


                        <label for="txtTotalAmount" class="control-label    col-md-2">Total Amount</label>
                        <input type="text" class="form-control    col-md-3" id="txtTotalAmount" />
                        <div class="col-md-2 offset-md-1 mt-sm-2">
                            <button type="button" id="btnAddProduct" class="btn btn-danger btn-block">Add Parts</button>
                        </div>
                        <div class="col-md-12 py-3">
                            <div id="alertMessage" class="alert alert-danger  pl-md-3 pl-sm-2 collapse">

                            </div>
                        </div>


                    </div>*@


                    <!--End of Row Product Details -->



                    



					<div class="row mt-md-2">
						<label class="col-md-1 control-label">Type Qty</label>
						<input id="txtRowQty" class="col-md-3 form-control  form-control-sm" />
						<button id="btnrowCreate" type="button" class="btn btn-primary btn-sm col-md-3 ml-1">Create</button>
						<table class="table table-responsive-sm mt-2" id="pTable">
							<thead class="bg-cyan">
							

									<tr>
										<th>SL</th>
										<th class="col-md-2">Part No.</th>
										<th class="col-md-4">Description</th>
										<th class="col-md-1">Qty</th>
										<th class="col-md-2">Unit Price</th>
										<th class="col-md-2">Total Amount</th>
										<th class="col-md-1" colspan="2">Action</th>
									</tr>
								

							</thead>
							<tbody></tbody>
						</table>
					</div>

                    <!--End of Table Row-->



                </div>
                <!--End of Card Body-->


                <div class="card-footer">
                    <div class="row">


                        @Html.LabelFor(m => m.ServiceBy, new { @class = "control-label col-md-1" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(m => m.ServiceBy, Model.ListofEmployee,new { @class = "form-control" })
                        </div>
                        <div class="col-md-1">
                            <input id="txtServiceBy" readonly class="form-control" />
                        </div>


                        @Html.LabelFor(m => m.ServiceDate, new { @class = "control-label col-md-1" })
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.ServiceDate, new { @class = "form-control datePicker" })
                        </div>

                        @Html.LabelFor(m => m.Remarks, new { @class = "control-label col-md-1" })

                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control" })
                        </div>

                    </div>
                    <!--End of Row-->
                    <div class="row py-3">
                        <div class="col-md-9">
                            <div class="row">
                                <label class="control-label col-md-12">
                                    <input type="checkbox" id="chkRefuse" /> Refuse Description
                                </label>
                                <div class="col-md-12 diplaynone" id="divRefuse">
                                    @Html.TextAreaFor(m => m.RefuseDescription, 3, 25, new { @class = "form-control" })
                                    @Html.LabelFor(m => m.RefuseAmount, new { @class = "control-label col-md-12" })
                                    @Html.TextBoxFor(m => m.RefuseAmount, new { @class = "form-control col-md-4" })
                                </div>
                            </div>
                            <!--End of Row -->

                        </div>

                        <div class="col-md-2 mt-md-4 mt-sm-2 offset-md-1">
                            <input type="submit" value="Save" class="btn btn-primary btn-block" />
                        </div>
                    </div>

                </div>
                <!-- End of Card Footer-->
            </div>
        }
        <!--End Of Begin Form Method-->
    </div>
    <!-- End of first Col-md-12-->

</div>



